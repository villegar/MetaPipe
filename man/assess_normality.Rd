% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metapipe.R
\name{assess_normality}
\alias{assess_normality}
\title{Assess normality of traits}
\usage{
assess_normality(
  raw_data,
  excluded_columns,
  cpus = 1,
  out_prefix = "metapipe",
  plots_dir = getwd(),
  transf_vals = c(2, exp(1), 3, 4, 5, 6, 7, 8, 9, 10),
  alpha = 0.05
)
}
\arguments{
\item{raw_data}{Data frame containing the raw data.}

\item{excluded_columns}{Numeric vector containing the indices of the dataset 
properties that are non-numeric, excluded columns.}

\item{cpus}{Number of CPUs to be used in the computation.}

\item{out_prefix}{Prefix for output files and plots.}

\item{plots_dir}{Path to the directory where plots should be stored.}

\item{transf_vals}{Numeric vector with the transformation values.}

\item{alpha}{Significance level.}
}
\value{
Structure containing the normalised data, if a suitable 
transformation was found, otherwise returns the original data.
}
\description{
Assess normality of traits in a data frame.
}
\details{
The normality of each trait is checked using a \emph{Shapiro-Wilk} test, 
under the following hypotheses:

\itemize{
  \item \eqn{H_0: } the sample comes from a normally distributed population
  \item \eqn{H_1: } the sample does not come from a normally distributed 
  population
}

Using a significance level of \eqn{\alpha = 0.05}. If the conclusion is that 
the sample does not come from a normally distributed population, then a 
number of transformations are performed, based on the transformation values 
passed with \code{transf_vals}. By default, the following transformation 
values are used \code{c(2, exp(1), 3, 4, 5, 6, 7, 8, 9, 10)} with the 
logarithmic (\code{log_a(x)}), power (\code{x^a}), and 
radical/root (\code{x^(1/a)}) functions.
}
\examples{
# Toy dataset
example_data <- data.frame(ID = c(1,2,3,4,5), 
                           P1 = c("one", "two", "three", "four", "five"), 
                           T1 = rnorm(5), 
                           T2 = rnorm(5))
example_data_normalised <- MetaPipe::assess_normality(example_data, c(1, 2))
knitr::kable(example_data_normalised)


# F1 Seedling Ionomics dataset
data(ionomics) # Includes some missing data
ionomics_rev <- MetaPipe::replace_missing(ionomics, 
                                          excluded_columns = c(1, 2),
                                          replace_na =  TRUE)
ionomics_normalised <- 
  MetaPipe::assess_normality(ionomics_rev,
                             excluded_columns = c(1, 2),
                             out_prefix = "ionomics",
                             transf_vals = c(2, exp(1)))
# Show one entry for each of the first ten traits (left to right)
knitr::kable(ionomics_normalised[nrow(ionomics) * c(1:10), ])

}
\seealso{
\code{\link{assess_normality_postprocessing}} and 
\code{\link{assess_normality_stats}}
}
